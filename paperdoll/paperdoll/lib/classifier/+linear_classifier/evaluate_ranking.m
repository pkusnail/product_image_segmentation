function evaluation = evaluate_ranking(truths, scores, varargin)
%EVALUATE Evaluate retrieval performance.
  truths = logical(truths(:));
  scores = scores(:);
  assert(numel(truths) == numel(scores));
  [sorted_scores, order] = sort(scores, 'descend');
  sorted_truths = truths(order);
  evaluation = struct(...
    'index',  order,...
    'score',  sorted_scores,...
    'tp',     cumsum(sorted_truths),...
    'fp',     cumsum(~sorted_truths),...
    'fn',     nnz(sorted_truths) - cumsum(sorted_truths),...
    'tn',     nnz(~sorted_truths) - cumsum(~sorted_truths)...
    );
  evaluation.accuracy = (evaluation.tp + evaluation.tn) ./ ...
      (evaluation.tp + evaluation.fp + evaluation.fn + evaluation.tn);
  evaluation.precision = evaluation.tp ./ (evaluation.tp + evaluation.fp);
  evaluation.recall = evaluation.tp ./ (evaluation.tp + evaluation.fn);
  evaluation.f1 = 2 * evaluation.tp ./ ...
      (2 * evaluation.tp + evaluation.fp + evaluation.fn);
end
